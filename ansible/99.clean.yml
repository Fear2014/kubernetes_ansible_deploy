# to clean 'kube-node' nodes
- hosts:
  - kube-master
  - kube-node
  tasks:
  - name: stop and disable kube-node service
    service: name={{ item }} state=stopped enabled=no
    with_items:
    - kubelet
    - kube-proxy
    ignore_errors: true

  - name: umount kubelet filesystems
    shell: "mount | grep '/var/lib/kubelet'| awk '{print $3}'|xargs umount || exit 0"
    args:
      warn: false
    ignore_errors: true

  - name: remove files and dirs of 'kube-node' nodes
    file: name={{ item }} state=absent
    with_items:
    - "/var/lib/kubelet/"
    - "/var/lib/kube-proxy/"
    - "/etc/systemd/system/kubelet.service"
    - "/etc/systemd/system/kube-proxy.service"
    - "/k8s"
    - "/opt/cni/bin"
    - "/var/lib/cni/"
    - "/var/lib/kube-router/" 
    - "/etc/cni/net.d"

  - name: cleanup networks1
    shell: "ip link del kube-bridge; \
        ip link del kube-dummy-if"
    ignore_errors: true

# to clean 'kube-master' nodes
- hosts:
  - kube-master
  tasks:
  - name: stop and disable kube-master service
    service: name={{ item }} state=stopped enabled=no
    with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    ignore_errors: true

  - name: remove files and dirs of 'kube-master' nodes
    file: name={{ item }} state=absent
    with_items:
    - "/k8s"
    - "/etc/systemd/system/kube-apiserver.service"
    - "/etc/systemd/system/kube-controller-manager.service"
    - "/etc/systemd/system/kube-scheduler.service"
    - "/etc/cni/net.d"
    - "/opt/cni/bin" 
    ignore_errors: true



# to clean 'etcd' nodes
- hosts: etcd
  tasks:
  - name: stop and disable etcd service
    service:
      name: etcd
      state: stopped
      enabled: no
    ignore_errors: true

  - name: remove files and dirs
    file: name={{ item }} state=absent
    with_items:
    - "/etc/etcd/"
    - "/data/etcd"
    - "/etc/systemd/system/etcd.service"  
# to clean container runtime and networking
- hosts:
  - kube-node
  tasks:    
  - name: delete exited container
    shell: "docker ps -a|grep -v mongodb |awk '{print $1}'|xargs docker rm -f"
    ignore_errors: true
  
    
    
    
    
    